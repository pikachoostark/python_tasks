# Кодирование длин серий (RLE) — алгоритм сжатия данных, заменяющий повторяющиеся символы на один символ
# и число его повторов. Серией называется последовательность, состоящая из нескольких одинаковых символов
# (более одного).
# При кодировании строка одинаковых символов, составляющих серию, заменяется строкой,
# содержащей сам повторяющийся символ и количество его повторов.
#
# Например, строка AAAABBB будет сжата в строку A4B3, а строка AAAAAAAAAAAAAAABAAAAA — в строку A15BA5.
#
# Вам дана сжатая строка, найдите длину исходной строки.
# Длина исходной строки не превышает 1000 символов,
# все символы исходной строки — заглавные буквы латинского алфавита.
# Ограничение времени: 2 с, ограничение памяти: 264 Мб.
###
# Формат ввода:
# В единственной строке входных данных содержится непустая строка.
# Гарантируется, что эта строка является результатом корректного RLE-сжатия некоторой строки.
#
# Формат вывода:
# Выведите длину исходной строки.
s = input()
main_counter = 0
tmp_counter = 0
lonely_flag = False

for symbol in s:
    if symbol.isdigit():
        lonely_flag = False
        tmp_counter *= 10
        tmp_counter += int(symbol)
    else:
        if lonely_flag:
            main_counter += 1
        lonely_flag = True
        main_counter += tmp_counter
        tmp_counter = 0

if s[-1].isalpha():
    main_counter += 1
else:
    main_counter += tmp_counter

print(main_counter)

# Решение:
# Это задача на аккуратную работу с символами и знание базовых методов работы со строками.
#
# Можно двигаться посимвольно, запоминая несколько предыдущих символов.
# Если после цифры встретилась цифра, то это цифры одного числа и мы копим число.
# Если после буквы встретилась буква — необходимо увеличить результат на единицу.
# Если после цифры встретилась буква — увеличиваем результат на накопленное число.
# Были участники, которые решили задачу с помощью регулярных выражений.
#
# Решение требует O(n) времени и O(1) дополнительной памяти (O(n) памяти потребуется на хранение самой строки).
# first_symbol = True
# result = 0
# number = ''
#
# for c in input():
#     if c.isdigit():
#         number += c
#     elif c.isalpha() and not number:
#         if first_symbol:
#             first_symbol = False
#         else:
#             result += 1
#     elif c.isalpha() and number:
#         result += int(number)
#         number = ''
#
# if number:
#     result += int(number)
# else:
#     result += 1
# print(result)
